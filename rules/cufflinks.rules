#; -*-makefile-*-

"""
assumes tophat2 output.
requires cuffquant is installed.

For replicates, make sure

Requires at least the following in its config:

assays:
  [assayname]:
    [samplename]:
      bam: /path/to/samplename.sort.bam
      fastq1: /path/to/samplename_matepair1.fastq.gz
      fastq2: null
      genome: [genome]
      rxbam: null
      bgbam: null
      bgfastq1: null
      bgfastq2: null
      bgrxbam: null

options:
  cuffquant:
    [species]: [your options here]

groups:
- CELLTYPE1_TREATMENT1
- CELLTYPE1_TREATMENT2
- CELLTYPE2_TREATMENT1
- CELLTYPE2_TREATMENT2
etc...

"""


__author__ = "Matt Lawlor (matt.a.lawlor@gmail.com)"
__version__ = 1.0


rule run_cuffquant:
	input:
		"RNA/bam/{genome}/{sample}.{aligner}.sort.bam",
		"RNA/bam/{genome}/{sample}.{aligner}.sort.bam.bai"
	output:
		"RNA/cufflinks/{genome}/cuffquant/{sample}-{aligner}/abundances.cxb",
		dir="RNA/cufflinks/{genome}/cuffquant/{sample}-{aligner}/"
	params:
		custom = lambda wildcards: config["options"]["cuffquant"][wildcards.genome]
	shell:
		"cuffquant {params.custom} -o {output.dir} {input[0]}"


## chances this works first shot are pretty much zero

rule run_cuffnorm:
	input:
		lambda wildcards: expand("RNA/cufflinks/{g}/cuffquant/{s}-{a}/abundances.cxb",g=wildcards.genome,s=config["assays"]["RNA"].keys(),a=wildcards.aligner)
	output:
		"RNA/cufflinks/{genome}/cuffnorm/{analysis}/{aligner}/genes.fpkm_table",dir="RNA/cufflinks/{genome}/cuffnorm/{analysis}/{aligner}/"
	params:
		## edit the following line if this fails
		groups = lambda wildcards: ",".join([x for x in config["groups"][wildcards.genome][wildcards.analysis] if any([x in y for y in config["assays"]["RNA"].keys()]) ]),
		grpreps = lambda wildcards: " ".join([",".join(["RNA/cufflinks/"+wildcards.genome+"/cuffquant/"+y+"-"+wildcards.aligner+"/abundances.cxb" for y in config["assays"]["RNA"].keys() if x in y]) for x in config["groups"][wildcards.genome][wildcards.analysis] if any([x in y for y in config["assays"]["RNA"].keys()]) ]),
		options = lambda wildcards: config["options"]["cuffnorm"][wildcards.genome]
	message:
		"Running cuffnorm now."
	shell:
		"cuffnorm -o {output.dir} -L {params.groups} {params.options} {params.grpreps}"


rule semenkovich_norm:
	input:
		"RNA/cufflinks/{genome}/cuffnorm/{analysis}/{aligner}/genes.fpkm_table"
	output:
		"RNA/cufflinks/{genome}/cuffnorm/{analysis}/{aligner}/semenkovich_norm/{analysis}_all_fpkm_means.txt",
		dir="RNA/cufflinks/{genome}/cuffnorm/{analysis}/{aligner}/semenkovich_norm/"
	params:
		groups = lambda wildcards: ",".join([x for x in config["groups"][wildcards.genome][wildcards.analysis] if any([x in y for y in config["assays"]["RNA"].keys()]) ]),
		options = lambda wildcards: config["options"]["semenkovich_norm"][wildcards.genome]
	shell:
		"/ark/home/ml290/miniconda2/envs/snakestuff/bin/R --no-save {input} {output.dir} {wildcards.analysis} {params.groups} {params.options} "
		"< /ark/home/cl512/pipeline/normalizeRNASeq.R"
